{% extends 'base.html.twig' %}

{% block body %}

	<div class=" overflow-y-auto overflow-x-hidden  justify-center items-center w-full h-[calc(100%-1rem)] max-h-full">
		<div class="relative p-4 w-full  max-h-full">

			<div class="relative bg-black px-12  ">

				<h1 class="text-xl font-semibold text-white m-0 ">Update Project
				</h1>
				<hr class="w-[10%] mb-10 mt-2">
				{{ form_start(form) }}
				<div>
					{{ form_label(form.name) }}
					{{ form_widget(form.name) }}
					<div class="text-red-600 py-2">
						{{ form_errors(form.name) }}
					</div>
				</div>
				<div>
					{{ form_label(form.github_path) }}
					{{ form_widget(form.github_path) }}
					<div class="text-red-600 py-2">
						{{ form_errors(form.github_path) }}
					</div>
				</div>
				<div>
					{{ form_label(form.host_path) }}
					{{ form_widget(form.host_path) }}
					<div class="text-red-600 py-2">
						{{ form_errors(form.host_path) }}
					</div>
				</div>
				<div>
					{{ form_label(form.description_en) }}
					{{ form_widget(form.description_en) }}
					<div class="text-red-600 py-2">
						{{ form_errors(form.description_en) }}
					</div>
				</div>
				<div>
					{{ form_label(form.description_fr) }}
					{{ form_widget(form.description_fr) }}
					<div class="text-red-600 py-2">
						{{ form_errors(form.description_fr) }}
					</div>
				</div>

				<div>
					{{ form_label(form.imageFile) }}
					{{ form_widget(form.imageFile) }}
					<div class="text-red-600 py-2">
						{{ form_errors(form.imageFile) }}
					</div>
				</div>

				<div>
					{{ form_label(form.projectImages) }}
					{{ form_widget(form.projectImages) }}
					<div class="text-red-600 py-2">
						{{ form_errors(form.projectImages) }}
					</div>
				</div>
				<div>
					{{ form_label(form.technologies) }}
					{{ form_widget(form.technologies, { 'attr': {'class': 'select-multiple'} }) }}
					<div class="text-red-600 py-2">
						{{ form_errors(form.technologies) }}
					</div>
				</div>

				<div class="w-full flex items-center justify-end">
					{{ form_widget(form.submit) }}
				</div>
				{{ form_end(form) }}

			</div>
		</div>
	</div>

{% endblock %}


{% block javascripts %}


	<script>
		document.addEventListener('DOMContentLoaded', (event) => {
const deleteLabel = document.querySelector('label[for$="_imageFile_delete"]');
if (deleteLabel) {
deleteLabel.textContent = 'Delete image';
deleteLabel.classList.add('custom-delete-label', 'text-gray-100');
}
});
	</script>
	<script>


		document.addEventListener('DOMContentLoaded', () => { // Function to handle adding new fields to a collection
const handleAddField = (collectionHolder, addButtonClass, addButtonText, fieldType) => {
let addButton = document.createElement('button');
addButton.type = 'button';
addButton.classList.add(addButtonClass, 'w-full', 'px-4', 'py-2', 'rounded', 'bg-blue-600', 'text-white', 'hover:bg-blue-700', 'focus:outline-none', 'transition-colors', 'my-2');
addButton.innerText = addButtonText;

let newLinkLi = document.createElement('div');
newLinkLi.appendChild(addButton);

collectionHolder.appendChild(newLinkLi);

let addFormToCollection = (e) => {
let prototype = collectionHolder.dataset.prototype;
let index = collectionHolder.dataset.index;
let newForm = prototype.replace(/__name__/g, index);
collectionHolder.dataset.index = parseInt(index) + 1;

let newFormLi = document.createElement('div');
newFormLi.innerHTML = newForm;
newLinkLi.parentNode.insertBefore(newFormLi, newLinkLi);
};

addButton.addEventListener('click', addFormToCollection);

collectionHolder.dataset.index = collectionHolder.querySelectorAll('input').length;
};

// ScreenShots Collection
let screenShotsCollectionHolder = document.querySelector('.screenShots-collection');
if (screenShotsCollectionHolder) {
handleAddField(screenShotsCollectionHolder, 'add_screenShot_link', 'Add a screen shot for the project', 'screenshot');
}


});
	</script>
{% endblock %}
